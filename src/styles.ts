import { VitesseThemes } from './colors';

type StyleArgs = ['dark' | 'light'] | ['dark' | 'light', 'soft' | 'black'];

export function getStyle(...args: StyleArgs) {
	const color = colorGetter(...args);
	return {
		'background.appearance': 'opaque',
		border: color('border'),
		'border.variant': color('border'),
		'border.focused': color('border'),
		'border.selected': color('border'),
		'border.transparent': color('border'),
		'border.disabled': color('border'),
		'elevated_surface.background': color('background'),
		'surface.background': color('background'),
		background: color('background'),
		'element.background': color('activeBackground'),
		'element.hover': color('faded'),
		'element.active': color('selectionBackgroundInActive'),
		'element.selected': color('selectionBackgroundInActive'),
		'element.disabled': color('background'),
		'drop_target.background': color('selectionBackgroundInActive'),
		'ghost_element.background': null,
		'ghost_element.hover': color('faded'),
		'ghost_element.active': color('selectionBackgroundInActive'),
		'ghost_element.selected': color('selectionBackgroundInActive'),
		'ghost_element.disabled': color('background'),
		text: color('foreground'),
		'text.muted': color('secondaryForeground'),
		'text.placeholder': color('ignored'),
		'text.disabled': color('ignored'),
		'text.accent': color('primary'),
		icon: color('foreground'),
		'icon.muted': color('secondaryForeground'),
		'icon.disabled': color('ignored'),
		'icon.placeholder': color('ignored'),
		'icon.accent': color('primary'),
		'status_bar.background': color('background'),
		'title_bar.background': color('background'),
		'title_bar.inactive_background': color('background'),
		'toolbar.background': color('activeBackground'),
		'tab_bar.background': color('background'),
		'tab.inactive_background': color('background'),
		'tab.active_background': color('activeBackground'),
		'search.match_background': color('activeBackground'),
		'panel.background': color('background'),
		'panel.focused_border': color('ignored'),
		'panel.indent_guide': color('activeBackground'),
		'panel.indent_guide_active': color('selectionBackground'),
		'panel.indent_guide_hover': color('selectionBackground'),
		'pane.focused_border': color('border'),
		'pane_group.border': color('border'),
		'scrollbar.thumb.background': color('selectionBackground'),
		'scrollbar.thumb.hover_background': color('selectionBackgroundActive'),
		'scrollbar.thumb.border': color('border'),
		'scrollbar.track.background': color('background'),
		'scrollbar.track.border': color('border'),
		'link_text.hover': color('primary'),

		'editor.foreground': color('foreground'),
		'editor.background': color('background'),
		'editor.gutter.background': color('background'),
		'editor.subheader.background': color('background'),
		'editor.active_line.background': color('activeBackground'),
		'editor.highlighted_line.background': color('background'),
		'editor.line_number': color('ignored'),
		'editor.active_line_number': color('activeForeground'),
		'editor.invisible': color('selectionBackground'),
		'editor.wrap_guide': color('selectionBackground'),
		'editor.active_wrap_guide': color('selectionBackground'),
		'editor.document_highlight.read_background': color('activeBackground'),
		'editor.document_highlight.write_background': color('activeBackground'),
		'editor.document_highlight.bracket_background': color('selectionBackground'),
		'editor.indent_guide': color('activeBackground'),
		'editor.indent_guide_active': color('selectionBackground'),

		'terminal.background': color('background'),
		'terminal.foreground': color('foreground'),
		'terminal.bright_foreground': color('foreground'),
		'terminal.dim_foreground': color('foreground'),
		'terminal.ansi.background': color('background'),
		'terminal.ansi.black': args[0] === 'dark' ? color('foreground') : color('background'),
		'terminal.ansi.bright_black': args[0] === 'dark' ? '#777777' : '#aaaaaa',
		'terminal.ansi.dim_black': args[0] === 'dark' ? '#777777' : '#aaaaaa',
		'terminal.ansi.red': color('red'),
		'terminal.ansi.bright_red': color('red'),
		'terminal.ansi.dim_red': color('red'),
		'terminal.ansi.green': color('green'),
		'terminal.ansi.bright_green': color('green'),
		'terminal.ansi.dim_green': color('green'),
		'terminal.ansi.yellow': color('yellow'),
		'terminal.ansi.bright_yellow': color('yellow'),
		'terminal.ansi.dim_yellow': color('yellow'),
		'terminal.ansi.blue': color('blue'),
		'terminal.ansi.bright_blue': color('blue'),
		'terminal.ansi.dim_blue': color('blue'),
		'terminal.ansi.magenta': color('magenta'),
		'terminal.ansi.bright_magenta': color('magenta'),
		'terminal.ansi.dim_magenta': color('magenta'),
		'terminal.ansi.cyan': color('cyan'),
		'terminal.ansi.bright_cyan': color('cyan'),
		'terminal.ansi.dim_cyan': color('cyan'),
		'terminal.ansi.white': '#dbd7ca',
		'terminal.ansi.bright_white': '#dbd7ca',
		'terminal.ansi.dim_white': '#dbd7ca',

		conflict: color('orange'),
		'conflict.background': null,
		'conflict.border': null,
		created: color('green'),
		'created.background': null,
		'created.border': null,
		deleted: color('red'),
		'deleted.background': null,
		'deleted.border': null,
		error: color('red'),
		'error.background': color('red', 'semi-transparent'),
		'error.border': color('red'),
		hidden: color('ignored'),
		'hidden.background': null,
		'hidden.border': null,
		hint: color('punctuation'),
		'hint.background': color('blue', 'semi-transparent'),
		'hint.border': color('blue'),
		ignored: color('ignored'),
		'ignored.background': null,
		'ignored.border': null,
		info: color('blue'),
		'info.background': color('blue', 'semi-transparent'),
		'info.border': color('blue'),
		modified: color('blue'),
		'modified.background': null,
		'modified.border': null,
		predictive: color('punctuation'),
		'predictive.background': null,
		'predictive.border': null,
		renamed: color('cyan'),
		'renamed.background': 'null',
		'renamed.border': 'null',
		success: color('green'),
		'success.background': color('green', 'semi-transparent'),
		'success.border': color('green'),
		unreachable: color('ignored'),
		'unreachable.background': null,
		'unreachable.border': null,
		warning: color('orange'),
		'warning.background': color('orange', 'semi-transparent'),
		'warning.border': color('orange'),

		players: [
			{
				cursor: color('foreground'),
				background: color('foreground'),
				selection: color('selectionBackground'),
			},
		],

		syntax: {
			attribute: syntax(color('variable')),
			boolean: syntax(color('boolean')),
			character: syntax(color('foreground')),
			'character.special': syntax(color('foreground')),
			comment: syntax(color('comment')),
			'comment.doc': syntax(color('comment')),
			'comment.documentation': syntax(color('comment')),
			'comment.error': syntax(color('comment')),
			'comment.hint': syntax(color('comment')),
			'comment.note': syntax(color('comment')),
			'comment.todo': syntax(color('comment')),
			'comment.warning': syntax(color('comment')),
			concept: syntax(color('foreground')),
			constant: syntax(color('variable')),
			'constant.builtin': syntax(color('red')),
			'constant.macro': syntax(color('constant')),
			constructor: syntax(color('keyword')),
			diff: syntax(color('foreground')),
			'diff.minus': syntax(color('foreground')),
			'diff.plus': syntax(color('foreground')),
			embedded: syntax(color('foreground')),
			emphasis: syntax(color('foreground'), 'italic'),
			'emphasis.strong': syntax(color('punctuation'), 'italic'),
			enum: syntax(color('foreground')),
			field: syntax(color('foreground')),
			float: syntax(color('foreground')),
			function: syntax(color('function')),
			'function.builtin': syntax(color('function')),
			'function.call': syntax(color('function')),
			'function.decorator': syntax(color('function')),
			'function.macro': syntax(color('function')),
			'function.method': syntax(color('function')),
			'function.method.call': syntax(color('function')),
			hint: syntax(color('foreground')),
			keyword: syntax(color('operator')),
			'keyword.conditional': syntax(color('keyword')),
			'keyword.conditional.ternary': syntax(color('keyword')),
			'keyword.coroutine': syntax(color('keyword')),
			'keyword.debug': syntax(color('keyword')),
			'keyword.directive': syntax(color('keyword')),
			'keyword.directive.define': syntax(color('keyword')),
			'keyword.exception': syntax(color('keyword')),
			'keyword.export': syntax(color('keyword')),
			'keyword.function': syntax(color('keyword')),
			'keyword.import': syntax(color('keyword')),
			'keyword.modifier': syntax(color('keyword')),
			'keyword.operator': syntax(color('keyword')),
			'keyword.repeat': syntax(color('keyword')),
			'keyword.return': syntax(color('keyword')),
			label: syntax(color('foreground')),
			link_text: syntax(color('string')),
			link_uri: syntax(color('comment')),
			module: syntax(color('foreground')),
			namespace: syntax(color('foreground')),
			number: syntax(color('number')),
			'number.float': syntax(color('foreground')),
			operator: syntax(color('operator')),
			parameter: syntax(color('variable')),
			parent: syntax(color('foreground')),
			predictive: syntax(color('foreground')),
			predoc: syntax(color('foreground')),
			primary: syntax(color('primary')),
			property: syntax(color('property')),
			punctuation: syntax(color('punctuation')),
			'punctuation.bracket': syntax(color('punctuation')),
			'punctuation.delimiter': syntax(color('punctuation')),
			'punctuation.list_marker': syntax(color('punctuation')),
			'punctuation.special': syntax(color('punctuation')),
			'punctuation.special.symbol': syntax(color('punctuation')),
			string: syntax(color('string')),
			'string.doc': syntax(color('string')),
			'string.documentation': syntax(color('string')),
			'string.escape': syntax(color('class')),
			'string.regex': syntax(color('regex')),
			'string.special': syntax(color('string')),
			'string.special.path': syntax(color('string')),
			'string.special.symbol': syntax(color('string')),
			'string.special.url': syntax(color('string')),
			symbol: syntax(color('string')),
			tag: syntax(color('keyword')),
			'tag.attribute': syntax(color('keyword')),
			'tag.delimiter': syntax(color('keyword')),
			'tag.doctype': syntax(color('keyword')),
			text: syntax(color('foreground')),
			'text.literal': syntax(color('secondaryForeground')),
			title: syntax(color('primary'), 'bold'),
			type: syntax(color('interface')),
			'type.builtin': syntax(color('type')),
			'type.builtin.class': syntax(color('class')),
			'type.class.definition': syntax(color('type')),
			'type.definition': syntax(color('type')),
			'type.interface': syntax(color('type')),
			'type.super': syntax(color('type')),
			variable: syntax(color('variable')),
			'variable.builtin': syntax(color('variable')),
			'variable.member': syntax(color('variable')),
			'variable.parameter': syntax(color('variable')),
			'variable.special': syntax(color('constant')),
			variant: syntax(color('variable')),
		},
	};
}

function colorGetter(...args: StyleArgs) {
	return (key: keyof typeof VitesseThemes, style?: 'semi-transparent') => {
		if (args.length === 2) {
			const variantKey = args[1] + key[0].toUpperCase() + key.slice(1);
			if (variantKey in VitesseThemes) {
				key = variantKey as keyof typeof VitesseThemes;
			}
		}
		const color = VitesseThemes[key];
		const opacity = style === 'semi-transparent' ? '4D' : '';
		if (typeof color === 'string') {
			return color + opacity;
		}
		return color[args[0] === 'dark' ? 0 : 1] + opacity;
	};
}

function syntax(color: string, ...styles: ('bold' | 'italic')[]) {
	this;
	return {
		color,
		font_style: styles.includes('italic') ? 'italic' : null,
		font_weight: styles.includes('bold') ? 700 : null,
	};
}
