import { VitesseThemes } from './colors';

type Appearance = 'dark' | 'dark-soft' | 'light' | 'light-soft';

type StyleArgs = ['dark' | 'light'] | ['dark' | 'light', 'soft' | 'black'];

export function getStyle(...args: StyleArgs) {
	const color = colorGetter(...args);
	return {
		// border: "#464b57ff",
		// "border.variant": "#363c46ff",
		// "border.focused": "#47679eff",
		// "border.selected": "#293b5bff",
		// "border.transparent": "#00000000",
		// "border.disabled": "#414754ff",
		// "elevated_surface.background": "#2f343eff",
		// "surface.background": "#2f343eff",
		// background: "#3b414dff",
		// "element.background": "#2e343eff",
		// "element.hover": "#363c46ff",
		// "element.active": "#454a56ff",
		// "element.selected": "#454a56ff",
		// "element.disabled": "#2e343eff",
		// "drop_target.background": "#83899480",
		// "ghost_element.background": "#00000000",
		// "ghost_element.hover": "#363c46ff",
		// "ghost_element.active": "#454a56ff",
		// "ghost_element.selected": "#454a56ff",
		// "ghost_element.disabled": "#2e343eff",
		// text: "#dce0e5ff",
		// "text.muted": "#a9afbcff",
		// "text.placeholder": "#878a98ff",
		// "text.disabled": "#878a98ff",
		// "text.accent": "#74ade8ff",
		// icon: "#dce0e5ff",
		// "icon.muted": "#a9afbcff",
		// "icon.disabled": "#878a98ff",
		// "icon.placeholder": "#a9afbcff",
		// "icon.accent": "#74ade8ff",
		// "status_bar.background": "#3b414dff",
		// "title_bar.background": "#3b414dff",
		// "title_bar.inactive_background": "#2e343eff",
		// "toolbar.background": "#282c33ff",
		// "tab_bar.background": "#2f343eff",
		// "tab.inactive_background": "#2f343eff",
		// "tab.active_background": "#282c33ff",
		// "search.match_background": "#74ade866",
		// "panel.background": "#2f343eff",
		// "panel.focused_border": null,
		// "pane.focused_border": null,
		// "scrollbar.thumb.background": "#c8ccd44c",
		// "scrollbar.thumb.hover_background": "#363c46ff",
		// "scrollbar.thumb.border": "#363c46ff",
		// "scrollbar.track.background": "#00000000",
		// "scrollbar.track.border": "#2e333cff",
		'editor.foreground': color('foreground'),
		'editor.background': color('background'),
		'editor.gutter.background': color('background'),
		'editor.subheader.background': color('background'),
		'editor.active_line.background': color('background'),
		'editor.highlighted_line.background': color('background'),
		'editor.line_number': color('foreground'),
		'editor.active_line_number': color('activeForeground'),
		'editor.invisible': '#11000',
		'editor.wrap_guide': '#11000',
		'editor.active_wrap_guide': '#11000',
		'editor.document_highlight.read_background': '#11000',
		'editor.document_highlight.write_background': '#11000',
		// "terminal.background": "#282c33ff",
		// "terminal.foreground": "#dce0e5ff",
		// "terminal.bright_foreground": "#dce0e5ff",
		// "terminal.dim_foreground": "#282c33ff",
		// "terminal.ansi.black": "#282c33ff",
		// "terminal.ansi.bright_black": "#525561ff",
		// "terminal.ansi.dim_black": "#dce0e5ff",
		// "terminal.ansi.red": "#d07277ff",
		// "terminal.ansi.bright_red": "#673a3cff",
		// "terminal.ansi.dim_red": "#eab7b9ff",
		// "terminal.ansi.green": "#a1c181ff",
		// "terminal.ansi.bright_green": "#4d6140ff",
		// "terminal.ansi.dim_green": "#d1e0bfff",
		// "terminal.ansi.yellow": "#dec184ff",
		// "terminal.ansi.bright_yellow": "#786441ff",
		// "terminal.ansi.dim_yellow": "#f1dfc1ff",
		// "terminal.ansi.blue": "#74ade8ff",
		// "terminal.ansi.bright_blue": "#385378ff",
		// "terminal.ansi.dim_blue": "#bed5f4ff",
		// "terminal.ansi.magenta": "#be5046ff",
		// "terminal.ansi.bright_magenta": "#5e2b26ff",
		// "terminal.ansi.dim_magenta": "#e6a79eff",
		// "terminal.ansi.cyan": "#6eb4bfff",
		// "terminal.ansi.bright_cyan": "#3a565bff",
		// "terminal.ansi.dim_cyan": "#b9d9dfff",
		// "terminal.ansi.white": "#dce0e5ff",
		// "terminal.ansi.bright_white": "#dce0e5ff",
		// "terminal.ansi.dim_white": "#575d65ff",
		// "link_text.hover": "#74ade8ff",
		// conflict: "#dec184ff",
		// "conflict.background": "#dec1841a",
		// "conflict.border": "#5d4c2fff",
		// created: "#a1c181ff",
		// "created.background": "#a1c1811a",
		// "created.border": "#38482fff",
		// deleted: "#d07277ff",
		// "deleted.background": "#d072771a",
		// "deleted.border": "#4c2b2cff",
		// error: "#d07277ff",
		// "error.background": "#d072771a",
		// "error.border": "#4c2b2cff",
		// hidden: "#878a98ff",
		// "hidden.background": "#696b771a",
		// "hidden.border": "#414754ff",
		// hint: "#788ca6ff",
		// "hint.background": "#5a6f891a",
		// "hint.border": "#293b5bff",
		// ignored: "#878a98ff",
		// "ignored.background": "#696b771a",
		// "ignored.border": "#464b57ff",
		// info: "#74ade8ff",
		// "info.background": "#74ade81a",
		// "info.border": "#293b5bff",
		// modified: "#dec184ff",
		// "modified.background": "#dec1841a",
		// "modified.border": "#5d4c2fff",
		// predictive: "#5a6a87ff",
		// "predictive.background": "#5a6a871a",
		// "predictive.border": "#38482fff",
		// renamed: "#74ade8ff",
		// "renamed.background": "#74ade81a",
		// "renamed.border": "#293b5bff",
		// success: "#a1c181ff",
		// "success.background": "#a1c1811a",
		// "success.border": "#38482fff",
		// unreachable: "#a9afbcff",
		// "unreachable.background": "#8389941a",
		// "unreachable.border": "#464b57ff",
		// warning: "#dec184ff",
		// "warning.background": "#dec1841a",
		// "warning.border": "#5d4c2fff",
		// players: [
		//   {
		//     cursor: "#74ade8ff",
		//     background: "#74ade8ff",
		//     selection: "#74ade83d",
		//   },
		//   {
		//     cursor: "#be5046ff",
		//     background: "#be5046ff",
		//     selection: "#be50463d",
		//   },
		//   {
		//     cursor: "#bf956aff",
		//     background: "#bf956aff",
		//     selection: "#bf956a3d",
		//   },
		//   {
		//     cursor: "#b477cfff",
		//     background: "#b477cfff",
		//     selection: "#b477cf3d",
		//   },
		//   {
		//     cursor: "#6eb4bfff",
		//     background: "#6eb4bfff",
		//     selection: "#6eb4bf3d",
		//   },
		//   {
		//     cursor: "#d07277ff",
		//     background: "#d07277ff",
		//     selection: "#d072773d",
		//   },
		//   {
		//     cursor: "#dec184ff",
		//     background: "#dec184ff",
		//     selection: "#dec1843d",
		//   },
		//   {
		//     cursor: "#a1c181ff",
		//     background: "#a1c181ff",
		//     selection: "#a1c1813d",
		//   },
		// ],
		syntax: {
			attribute: syntax(color('variable')),
			boolean: syntax(color('boolean')),
			comment: syntax(color('comment')),
			'comment.doc': syntax(color('comment')),
			constant: syntax(color('constant')),
			constructor: syntax(color('keyword')),
			// embedded: syntax(color("")),
			// emphasis: syntax(color("")),
			// "emphasis.strong": syntax(color("")),
			// enum: syntax(color("")),
			function: syntax(color('function')),
			// hint: syntax(color("")),
			keyword: syntax(color('keyword')),
			label: syntax(color('keyword')),
			// link_text: syntax(color("")),
			// link_uri: syntax(color("")),
			number: syntax(color('number')),
			operator: syntax(color('operator')),
			// predictive: syntax(color("")),
			// preproc: syntax(color("")),
			primary: syntax(color('primary')),
			property: syntax(color('property')),
			punctuation: syntax(color('punctuation')),
			'punctuation.bracket': syntax(color('punctuation')),
			'punctuation.delimiter': syntax(color('punctuation')),
			'punctuation.list_marker': syntax(color('punctuation')),
			'punctuation.special': syntax(color('punctuation')),
			string: syntax(color('string')),
			'string.escape': syntax(color('string')),
			'string.regex': syntax(color('string')),
			'string.special': syntax(color('string')),
			'string.special.symbol': syntax(color('string')),
			// tag: syntax(color("")),
			// "text.literal": syntax(color("")),
			// title: syntax(color("")),
			type: syntax(color('type')),
			variable: syntax(color('variable')),
			'variable.special': syntax(color('variable')),
			// variant: syntax(color("")),
		},
	};
}

function colorGetter(...args: StyleArgs) {
	return (key: keyof typeof VitesseThemes) => {
		if (args.length === 2) {
			const variantKey = args[1] + key[0].toUpperCase() + key.slice(1);
			if (variantKey in VitesseThemes) {
				key = variantKey as keyof typeof VitesseThemes;
			}
		}
		return VitesseThemes[key][args[0].includes('dark') ? 0 : 1];
	};
}

function syntax(color: string) {
	return { color, font_style: null, font_weight: null };
}
